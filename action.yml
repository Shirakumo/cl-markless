name: 'Compile Markless'
description: 'Compile a Markless file'
branding:
  color: blue
  icon: file-text
inputs:
  input:
    description: 'The source file to compile'
    required: true
  output:
    description: 'The target file to output to'
  format:
    description: 'The format of the output file'
  input-format:
    description: 'The format of the input file'
  directives:
    description: 'A comma-separated list of directives to use'
    default: 'paragraph, blockquote-header, blockquote, unordered-list, ordered-list, header, horizontal-rule, code-block, instruction, comment, embed, footnote, left-align, right-align, center, justify, bold, italic, underline, strikethrough, code, dash, supertext, subtext, compound, deprecated-compound, footnote-reference, url, newline'
  line-break-mode:
    description: 'Which line break mode to use'
    default: 'show'
  extension:
    description: 'Path to an extension to load'
  styling:
    description: 'Path to a styling file to use'
  gh-pages:
    description: 'Whether to push to Github pages'
  
outputs:
  output:
    description: 'The output file that was compiled'
    value: ${{ inputs.output || format('{0}/markless/index.html', runner.temp) }}
runs:
  using: "composite"
  steps:
    - name: Install texlive
      if: ${{ inputs.format == 'latex' }}
      shell: bash
      run: |
        sudo apt-get install -y texlive texlive-latex-extra python3-pygments
    - name: Install cl-markless
      if: ${{ hashFiles(format('{0}/cl-markless', runner.temp)) == '' }}
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'Shirakumo/cl-markless'
        file: ${{ runner.os == 'Windows' && 'cl-markless.exe' || (runner.os == 'Linux' && 'cl-markless.run' || 'cl-markless.o') }}
        target: ${{ runner.temp }}/cl-markless
    - name: Run cl-markless
      shell: bash
      run: |
        shopt -s globstar
        mkdir -p "$(echo "$OUTPUT" | sed -nE 's/(.*)\/.*/\1/p')" || echo ""
        chmod +x ${{ runner.temp }}/cl-markless
        for file in $INPUT; do
          outpath="$OUTPUT"
          if [[ "$outpath" =~ /$ ]]; then
             relpath="$file"
             if [[ "$relpath" =~ ^/ ]]; then
                relpath="$(basename "$relpath")"
             fi
             outpath="$(dirname "$outpath$relpath")/"
             mkdir -p "$outpath"
          fi
          echo "; Compiling $file to $outpath"
          ${{ runner.temp }}/cl-markless \
            --input "$file" \
            --output "$outpath" \
            --format "$FORMAT" \
            --input-format "$INPUT_FORMAT" \
            --directives "$DIRECTIVES" \
            --line-break-mode "$LINE_BREAK_MODE" \
            --extension "$EXTENSION" \
            --styling "$STYLING" \
            --verbose
        done
      env:
        INPUT: ${{ inputs.input }}
        OUTPUT: ${{ inputs.output || format('{0}/markless/index.html', runner.temp) }}
        FORMAT: ${{ inputs.format }}
        INPUT_FORMAT: ${{ inputs.input-format }}
        DIRECTIVES: ${{ inputs.directives }}
        LINE_BREAK_MODE: ${{ inputs.line-break-mode }}
        EXTENSION: ${{ inputs.extension }}
        STYLING: ${{ inputs.styling }}
    - name: Upload Github Pages Artefact
      if: ${{ inputs.gh-pages }}
      uses: actions/upload-pages-artifact@v3.0.1
      with:
        path: ${{ inputs.output || format('{0}/markless/', runner.temp) }}
    - name: Write to Github Pages
      if: ${{ inputs.gh-pages }}
      id: deployment
      uses: actions/deploy-pages@v4
